name: Publish to NPM

on:
  release:
    types: [published]

permissions:
  contents: read
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    if: startsWith(github.event.release.tag_name, 'v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build library
        run: npm run build:lib

      - name: Extract version from tag
        id: version
        run: |
          TAG_NAME="${{ github.event.release.tag_name }}"
          VERSION=${TAG_NAME#v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          
          # Determine npm tag based on version
          if [[ $VERSION == *"beta"* ]] || [[ $VERSION == *"alpha"* ]] || [[ $VERSION == *"rc"* ]]; then
            echo "NPM_TAG=beta" >> $GITHUB_OUTPUT
          else
            echo "NPM_TAG=latest" >> $GITHUB_OUTPUT
          fi
          
          echo "Publishing version: $VERSION with tag: ${{ steps.version.outputs.NPM_TAG }}"

      - name: Update package.json version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          TARGET_VERSION="${{ steps.version.outputs.VERSION }}"
          
          echo "Current package.json version: $CURRENT_VERSION"
          echo "Target version from tag: $TARGET_VERSION"
          
          if [ "$CURRENT_VERSION" != "$TARGET_VERSION" ]; then
            echo "Updating package.json version to $TARGET_VERSION"
            npm version $TARGET_VERSION --no-git-tag-version
          else
            echo "Version already matches, proceeding with publish"
          fi

      - name: Check if version already published
        id: check_published
        run: |
          if npm view react-color-pikr@${{ steps.version.outputs.VERSION }} version 2>/dev/null; then
            echo "ALREADY_PUBLISHED=true" >> $GITHUB_OUTPUT
            echo "⚠️  Version ${{ steps.version.outputs.VERSION }} is already published to npm"
          else
            echo "ALREADY_PUBLISHED=false" >> $GITHUB_OUTPUT
            echo "✅ Version ${{ steps.version.outputs.VERSION }} is not published yet"
          fi

      - name: Publish to NPM
        if: steps.check_published.outputs.ALREADY_PUBLISHED == 'false'
        run: |
          echo "Publishing react-color-pikr@${{ steps.version.outputs.VERSION }} with tag ${{ steps.version.outputs.NPM_TAG }}"
          npm publish --tag ${{ steps.version.outputs.NPM_TAG }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Skip publish (already exists)
        if: steps.check_published.outputs.ALREADY_PUBLISHED == 'true'
        run: |
          echo "⏭️ Skipping npm publish - version ${{ steps.version.outputs.VERSION }} already exists"
          echo "This is likely because the release was created manually or re-triggered"
